# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

env:
  ORG_ID: 58352764-d415-4032-8943-d794cfb602ba
  ENV_ID: 0d631087-dc36-4999-a60c-14c4b8143e01
  TARGET_ID: 18247396
  APP_NAME: mule-esb-crg-cicd-demo
  ARTIFACT_NAME: mule-esb-crg-cicd-demo-mule-application.jar

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Request Platform Auth
      id: 'auth'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token'
        method: 'POST'
        data: '{"client_id": "${{ secrets.CA_CLIENT_ID }}", "client_secret": "${{ secrets.CA_CLIENT_SECRET }}", "grant_type": "client_credentials"}'
    - name: Deploy using ARM REST API
      id: 'deploy'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://anypoint.mulesoft.com/hybrid/api/v1/applications'
        method: 'POST'
        bearerToken: ${{ fromJson(steps.auth.outputs.response).access_token }}
        files: '{"file": "${{GITHUB_WORKSPACE}}/target/$ARTIFACT_NAME"}'
        data: '{"artifactName": "$APP_NAME", "targetId": "$TARGET_ID"}'
        customHeaders: '{"X-ANYPNT-ORG-ID": "$ORG_ID", "X-ANYPNT-ENV-ID": "$ENV_ID" }'